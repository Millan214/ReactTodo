{"version":3,"sources":["svg/CloseIcon.js","components/ToDoList.jsx","components/ToDoListDataInput.jsx","components/ToDoListWrapper.jsx","components/App.jsx","index.js"],"names":["CloseIcon","props","xmlns","className","viewBox","fill","fillRule","d","clipRule","ToDoList","context","useContext","TodoContext","updateChecked","checked","id","todo","window","localStorage","miTodoList","JSON","stringify","li","i","type","defaultChecked","onClick","e","target","map","element","text","eliminar","ToDoListDataInput","autoComplete","spellCheck","placeholder","add","createContext","ToDoListWrapper","initialTodo","parse","useState","setTodo","cont","setCont","useEffect","todoUtils","arr","forEach","input","document","querySelector","value","inputOrder","sort","a","b","Provider","App","ReactDOM","render","getElementById"],"mappings":"wLAMaA,EAAY,SAACC,GAAD,OACvB,6CACEC,MAAM,6BACNC,UAAU,UACVC,QAAQ,YACRC,KAAK,gBACDJ,GALN,aAOE,sBACEK,SAAS,UACTC,EAAE,6MACFC,SAAS,gBCbFC,EAAW,WAEpB,IAAMC,EAAUC,qBAAWC,GAErBC,EAAgB,SAACC,EAASC,GAC5BL,EAAQM,KAAKD,GAAID,QAAUA,EAC3BG,OAAOC,aAAaC,WAAaC,KAAKC,UAAUX,EAAQM,OAGtDM,EAAK,SAACR,EAASS,GACjB,OAAIT,EAEI,uBACIU,KAAK,WACLT,GAAIQ,EACJE,gBAAc,EACdC,QAAS,SAACC,GACNd,EAAcc,EAAEC,OAAOd,QAASS,MAMxC,uBACIC,KAAK,WACLT,GAAIQ,EACJG,QAAS,SAACC,GACNd,EAAcc,EAAEC,OAAOd,QAASS,OAOpD,OACI,mCACI,6BACIb,EAAQM,KAAKa,KAAI,SAACC,EAASP,GAAV,OACb,qBACIpB,UAAU,yEADd,UAEKmB,EAAGQ,EAAQhB,QAASS,GACrB,mBAAGpB,UAAU,eAAb,SAA6B2B,EAAQC,OACrC,cAAC,EAAD,CACIL,QAAS,WAAQhB,EAAQsB,SAAST,IAClCpB,UAAU,mCANToB,WCvChBU,EAAoB,WAE7B,IAAMvB,EAAUC,qBAAWC,GAE3B,OACI,mCACI,sBAAKT,UAAU,uBAAf,UACI,uBAAOqB,KAAK,OAAOT,GAAG,QAAQmB,aAAa,MAAMC,WAAW,QAAQC,YAAY,kBAC5EjC,UAAU,iEACd,wBAAQuB,QAAShB,EAAQ2B,IACrBlC,UAAU,qFADd,6BCRHS,EAAc0B,0BAEdC,EAAkB,WAE3B,IAAIC,EAAc,GAG4B,qBAAnCvB,OAAOC,aAAaC,WAC3BqB,EAAcpB,KAAKqB,MAAMxB,OAAOC,aAAaC,YAG7CF,OAAOC,aAAaC,WAAa,GAGrC,MAAwBuB,mBAASF,GAAjC,mBAAOxB,EAAP,KAAa2B,EAAb,KACA,EAAwBD,mBAAS,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KAGAC,qBAAU,WACN7B,OAAOC,aAAaC,WAAaC,KAAKC,UAAUL,KACjD,CAACA,IAEJ,IAmBM+B,EAAY,CACd/B,KAAMA,EACN2B,QAASA,EACTX,SAba,SAACjB,GACd,IAAIiC,EAAM,GACVhC,EAAKiC,SAAQ,SAACtB,EAAGJ,GACTA,IAAMR,IACNiC,EAAG,sBAAOA,GAAP,CAAYrB,QAGvBgB,GAAQ,SAAAhB,GAAC,OAAQqB,MAOjBX,IAvBQ,WACR,IAAMa,EAAQC,SAASC,cAAc,UACjB,KAAhBF,EAAMG,QACNR,EAAQD,EAAO,GACfD,GAAQ,SAAAK,GAAG,4BAAQA,GAAR,CAAa,CAAEjB,KAAMmB,EAAMG,MAAOC,WAAYV,EAAM9B,SAAS,QACxE6B,GAAQ,SAAAK,GAAG,OAAIA,EAAIO,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzB,KAAO0B,EAAE1B,KAAO,GAAK,WAqBlE,OACI,cAACnB,EAAY8C,SAAb,CAAsBL,MAAUN,EAAhC,SACI,sBAAK5C,UAAU,iDAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,UCtDHwD,EAAM,WACf,OACI,qBAAKxD,UAAU,+CAAf,SACI,cAAC,EAAD,O,MCAZyD,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.4edc85ef.chunk.js","sourcesContent":["/*\r\nhttps://react-svgr.com/playground/\r\n*/\r\n\r\nimport * as React from \"react\"\r\n\r\nexport const CloseIcon = (props) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-5 w-5\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M4.293 4.293a1 1 0 0 1 1.414 0L10 8.586l4.293-4.293a1 1 0 1 1 1.414 1.414L11.414 10l4.293 4.293a1 1 0 0 1-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 0 1-1.414-1.414L8.586 10 4.293 5.707a1 1 0 0 1 0-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n)\r\n","import React, { useContext } from 'react'\r\nimport { CloseIcon } from '../svg/CloseIcon.js'\r\nimport { TodoContext } from './ToDoListWrapper.jsx'\r\n\r\nexport const ToDoList = () => {\r\n\r\n    const context = useContext(TodoContext)\r\n\r\n    const updateChecked = (checked, id) => {\r\n        context.todo[id].checked = checked\r\n        window.localStorage.miTodoList = JSON.stringify(context.todo)\r\n    }\r\n\r\n    const li = (checked, i) => {\r\n        if (checked) {\r\n            return (\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id={i}\r\n                    defaultChecked\r\n                    onClick={(e) => {\r\n                        updateChecked(e.target.checked, i)\r\n                    }}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id={i}\r\n                    onClick={(e) => {\r\n                        updateChecked(e.target.checked, i)\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul>{\r\n                context.todo.map((element, i) =>\r\n                    <li key={i}\r\n                        className=\"my-2 bg-gray-200 rounded-md p-2 pl-4 flex items-center justify-between\">\r\n                        {li(element.checked, i)}\r\n                        <p className=\"w-11/12 mr-2\">{element.text}</p>\r\n                        <CloseIcon\r\n                            onClick={() => { context.eliminar(i) }}\r\n                            className=\"hover:cursor-pointer h-5 w-5\"\r\n                        />\r\n                    </li>\r\n                )\r\n            }</ul>\r\n        </>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { TodoContext } from \"./ToDoListWrapper\"\r\n\r\nexport const ToDoListDataInput = () => {\r\n\r\n    const context = useContext(TodoContext)\r\n\r\n    return(\r\n        <>\r\n            <div className=\"flex justify-between\">\r\n                <input type=\"text\" id=\"texto\" autoComplete=\"off\" spellCheck=\"false\" placeholder=\"Introduce texto\"\r\n                    className=\"w-full outline-none rounded-md bg-gray-700 text-gray-300 p-2\" />\r\n                <button onClick={context.add}\r\n                    className=\"ml-2 bg-red-500 rounded-md pl-6 pr-6 p-2 text-white hover:shadow-md transition-all\">\r\n                    AÃ±adir\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect, createContext } from 'react'\r\nimport { ToDoList } from './ToDoList'\r\nimport { ToDoListDataInput } from './ToDoListDataInput'\r\n\r\nexport const TodoContext = createContext()\r\n\r\nexport const ToDoListWrapper = () => {\r\n\r\n    let initialTodo = []\r\n\r\n    // si la lista existe en el local storage inicializa la variable initialTodo con el valor que haya en el\r\n    if (typeof window.localStorage.miTodoList !== 'undefined') {\r\n        initialTodo = JSON.parse(window.localStorage.miTodoList)\r\n    } else {\r\n        //si no existe, simplemente la creo\r\n        window.localStorage.miTodoList = []\r\n    }\r\n\r\n    const [todo, setTodo] = useState(initialTodo)\r\n    const [cont, setCont] = useState(0)\r\n\r\n    // escucho por cambios en la variable todo\r\n    useEffect(() => {\r\n        window.localStorage.miTodoList = JSON.stringify(todo)\r\n    }, [todo]);\r\n\r\n    const add = () => {\r\n        const input = document.querySelector(\"#texto\")\r\n        if (input.value !== \"\") {\r\n            setCont(cont + 1)\r\n            setTodo(arr => [...arr, { text: input.value, inputOrder: cont, checked: false }])\r\n            setTodo(arr => arr.sort((a, b) => (a.text > b.text ? 1 : -1)))\r\n        }\r\n    }\r\n\r\n    const eliminar = (id) => {\r\n        let arr = []\r\n        todo.forEach((e, i) => {\r\n            if (i !== id) {\r\n                arr = [...arr, e]\r\n            }\r\n        })\r\n        setTodo(e => e = arr)\r\n    }\r\n\r\n    const todoUtils = {\r\n        todo: todo,\r\n        setTodo: setTodo,\r\n        eliminar: eliminar,\r\n        add: add\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider value = { todoUtils }>\r\n            <div className=\"border-2 w-8/12 border-gray-200 p-3 rounded-xl\">\r\n                <ToDoListDataInput />\r\n                <ToDoList />\r\n            </div>\r\n        </TodoContext.Provider>\r\n    )\r\n}","import { ToDoListWrapper } from \"./ToDoListWrapper\"\r\n\r\nexport const App = () => {\r\n    return(\r\n        <div className=\"flex flex-col pt-3 items-center min-h-screen\">\r\n            <ToDoListWrapper />\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}